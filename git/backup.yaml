apiVersion: batch/v1
kind: CronJob
metadata:
  name: git-backup
  namespace: infrastructure
spec:
  schedule: "0 */2 * * *"
  successfulJobsHistoryLimit: 1
  failedJobsHistoryLimit: 1
  jobTemplate:
    spec:
      backoffLimit: 0
      template:
        spec:
          restartPolicy: Never
          initContainers:
          - name: ssh-init
            image: registry.convex.watsonkp.com/sulliedeclat/ssh-init:latest
            imagePullPolicy: Always
            env:
            - name: IDENTITY
              valueFrom:
                configMapKeyRef:
                  name: git-ssh-config
                  key: backup.identity
            - name: PRINCIPALS
              valueFrom:
                configMapKeyRef:
                  name: git-ssh-config
                  key: backup.principals
            command: ['/bin/sh', '/container/client-init.sh']
            volumeMounts:
            - name: key
              mountPath: "/key"
              readOnly: false
            - name: ca
              mountPath: "/secret"
              readOnly: true
          containers:
          - name: backup
            image: registry.convex.watsonkp.com/sulliedeclat/backup:latest
            imagePullPolicy: Always
            securityContext:
              capabilities:
                add:
                  # Required to run default ping implementation in Alpine (busybox)
                  [ "NET_RAW" ]
            command: ['/bin/sh', '/container/backup-git.sh']
            env:
              - name: BACKUP_USER
                valueFrom:
                  configMapKeyRef:
                    name: git-ssh-config
                    key: backup.user
              - name: BACKUP_HOST
                valueFrom:
                  configMapKeyRef:
                    name: git-ssh-config
                    key: backup.host
              - name: BACKUP_OUTPUT
                valueFrom:
                  configMapKeyRef:
                    name: git-ssh-config
                    key: backup.output
            volumeMounts:
            - name: config
              mountPath: "/config"
              readOnly: true
            - name: key
              mountPath: "/key"
              readOnly: true
          volumes:
            - name: config
              configMap:
                name: known-hosts
            - name: ca
              secret:
                secretName: ca-user-key
                defaultMode: 256
            - name: key
              emptyDir:
                sizeLimit: 10Mi

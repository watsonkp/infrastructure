apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: kibana
  name: kibana
  namespace: logging
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kibana
  template:
    metadata:
      labels:
        app: kibana
    spec:
      initContainers:
        - name: users-init
          image: registry.infrastructure.svc.cluster.local/example/util-api:latest
          imagePullPolicy: Always
          command: ['/bin/sh', '/container/users.sh']
          env:
            - name: 'ELASTIC_PASSWORD'
              valueFrom:
                secretKeyRef:
                  name: elastic
                  key: password
            - name: 'KIBANA_SYSTEM_PASSWORD'
              valueFrom:
                secretKeyRef:
                  name: kibana-system
                  key: password
            - name: 'KIBANA_ADMINISTRATOR_PASSWORD'
              valueFrom:
                secretKeyRef:
                  name: kibana-administrator
                  key: password
          volumeMounts:
          - name: certs
            mountPath: "/container/certs"
            readOnly: true
          - name: script
            mountPath: "/container"
            readOnly: true
      containers:
        - name: kibana
          image: docker.elastic.co/kibana/kibana:8.8.1
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 5601
              name: kibana-http
              protocol: TCP
          resources:
            requests:
              cpu: 250m
              memory: 512Mi
          env:
            - name: 'SERVER_NAME'
              value: 'kibana'
            - name: 'ELASTICSEARCH_HOSTS'
              value: '["https://elasticsearch:9200"]'
            - name: 'ELASTICSEARCH_USERNAME'
              valueFrom: 
                secretKeyRef:
                  name: kibana-system
                  key: username
            - name: 'ELASTICSEARCH_PASSWORD'
              valueFrom: 
                secretKeyRef:
                  name: kibana-system
                  key: password
            - name: 'LICENSE'
              value: 'basic'
            - name: 'ELASTICSEARCH_SSL_CERTIFICATEAUTHORITIES'
              value: '/config/certs/elasticsearch-ca.pem'
          volumeMounts:
          - name: certs
            mountPath: "/config/certs"
            readOnly: true
      volumes:
        - name: certs
          projected:
            sources:
            - configMap:
                name: elasticsearch-ca
                items:
                - key: elasticsearch-ca.pem
                  path: elasticsearch-ca.pem
        - name: script
          configMap:
            name: init-kibana-users
            items:
            - key: "users.sh"
              path: "users.sh"
